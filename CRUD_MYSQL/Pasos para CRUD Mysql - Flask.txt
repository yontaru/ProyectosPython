------ bd.py (raíz del sitio)

import pymysql


def obtener_conexion():
    return pymysql.connect(host='localhost',
                                user='root',
                                password='',
                                db='bdsbfacturacion')


----- controlador_clientes.py

from bd import obtener_conexion


def insertar_cliente(nombre, telefono):
    conexion = obtener_conexion()
    with conexion.cursor() as cursor:
        cursor.execute("INSERT INTO cliente(nombre, telefono) VALUES (%s, %s)",
                       (nombre, telefono))
    conexion.commit()
    conexion.close()


def obtener_clientes():
    conexion = obtener_conexion()
    clientes = []
    with conexion.cursor() as cursor:
        cursor.execute("SELECT id, nombre, telefono FROM cliente")
        clientes = cursor.fetchall()
    conexion.close()
    return clientes


def eliminar_cliente(id):
    conexion = obtener_conexion()
    with conexion.cursor() as cursor:
        cursor.execute("DELETE FROM cliente WHERE id = %s", (id))
    conexion.commit()
    conexion.close()


def obtener_cliente_por_id(id):
    conexion = obtener_conexion()
    cliente = None
    with conexion.cursor() as cursor:
        cursor.execute(
            "SELECT id, nombre, telefono FROM cliente WHERE id = %s", (id,))
        cliente = cursor.fetchone()
    conexion.close()
    return cliente


def actualizar_cliente(nombre,telefono, id):
    conexion = obtener_conexion()
    with conexion.cursor() as cursor:
        cursor.execute("UPDATE cliente SET nombre = %s, telefono = %s WHERE id = %s",
                       (nombre, telefono, id))
    conexion.commit()
    conexion.close()

---- layout.html (dentro de la carpeta templates)

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!--Poner un block para que luego pueda ser remplazado en las siguientes plantillas; lo mismo con el  block contenido-->
    <title>CRUD MySQL con Flask - {% block titulo %}{% endblock %}</title>
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css"> -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
</head>

<body>
    {%block contenido %} {% endblock %}
</body>

</html>

--- clientes.html (dentro de la carpeta templates)

{% extends "layout.html" %}
{% block titulo %} Clientes {% endblock %}
{% block contenido %}
<div class="container">
    <section class="section">
        <div class="columns">
            <div class="column">
                <h3 class="is-size-3">Clientes</h3>
                <a href="{{url_for('formulario_agregar_cliente')}}" class="btn btn-primary">Agregar</a>
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Teléfono</th>
                            <th>Editar</th>
                            <th>Eliminar</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for cliente in clientes %}
                        <tr>
                            <td>{{cliente[1]}}</td>
                            <td>{{cliente[2]}}</td>
                            <td>
                                {# Pasar el id (lo que hay en juego[0] #}
                                <a href="{{url_for('editar_cliente', id=cliente[0])}}"
                                    class="btn btn-success">Editar</a>
                            </td>
                            <td>
                                <form action="{{url_for('eliminar_cliente')}}" method="POST" onSubmit="return confirm('Está seguro de eliminar este cliente?');">
                                    <input type="hidden" name="id" value="{{cliente[0]}}">
                                    <button class="btn btn-danger">Eliminar</button>
                                </form>
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</div>
{% endblock %}

--- agregar_cliente.html (dentro de la carpeta templates)

{% extends "layout.html" %}
{% block titulo %}
Agregar Cliente
{% endblock %}
{% block contenido %}
<div class="container">
    <section class="section">
        <div class="columns">
            <div class="column is-one-third">
                <h3 class="is-size-3">Agregar Cliente</h3>
                <form action="{{url_for('guardar_cliente')}}" method="post">
                    <label for="nombre">Nombre:</label>
                    <input required type="text" class="form-control" placeholder="Nombre" name="nombre" id="nombre">
                    <label for="telefono">Telefono</label>
                    <input required type="text" class="form-control" placeholder="Teléfono" name="telefono" id="telefono">
                    <br>
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <a href="{{url_for('clientes')}}" class="btn btn-primary">Volver</a>
                </form>
            </div>
        </div>
    </section>
</div>
{% endblock %}

--- editar_cliente (dentro de la carpeta templates)

{% extends "layout.html" %}
{% block titulo %}
Editar Cliente
{% endblock %}
{% block contenido %}
<div class="container">
    <section class="section">
        <div class="columns">
            <div class="column">
                <h3 class="is-size-3">Editar Cliente</h3>
                <form action="{{url_for('actualizar_cliente')}}" method="post">
                    {# Enviar el id en un campo oculto #}
                    <input type="hidden" name="id" value="{{cliente[0]}}">
                    <label for="nombre">Nombre:</label>
                    <input value="{{cliente[1]}}" required type="text" class="form-control" placeholder="Nombre" name="nombre"
                        id="nombre">
                    <label for="telefono">Teléfono</label>
                    <input value="{{cliente[2]}}" required type="text" class="form-control" placeholder="Teléfono"
                        name="telefono" id="telefono">
                    <br>
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <a href="{{url_for('clientes')}}" class="btn btn-primary">Volver</a>
                </form>
            </div>
        </div>
    </section>
</div>
{% endblock %}

--- main.py (en la raíz del sitio)


from flask import Flask, render_template, request, redirect, flash
import controlador_clientes

app = Flask(__name__)

"""
Definición de rutas
"""


@app.route("/agregar_cliente")
def formulario_agregar_cliente():
    return render_template("agregar_cliente.html")


@app.route("/guardar_cliente", methods=["POST"])
def guardar_cliente():
    nombre = request.form["nombre"]
    telefono = request.form["telefono"]
    controlador_clientes.insertar_cliente(nombre, telefono)
    # De cualquier modo, y si todo fue bien, redireccionar
    return redirect("/clientes")


@app.route("/")
@app.route("/clientes")
def clientes():
    clientes = controlador_clientes.obtener_clientes()
    return render_template("clientes.html", clientes=clientes)


@app.route("/eliminar_cliente", methods=["POST"])
def eliminar_cliente():
    controlador_clientes.eliminar_cliente(request.form["id"])
    return redirect("/clientes")


@app.route("/formulario_editar_cliente/<int:id>")
def editar_cliente(id):
    # Obtener el cliente por ID
    cliente = controlador_clientes.obtener_cliente_por_id(id)
    return render_template("editar_cliente.html", cliente=cliente)


@app.route("/actualizar_cliente", methods=["POST"])
def actualizar_cliente():
    id = request.form["id"]
    nombre = request.form["nombre"]
    telefono = request.form["telefono"]
    controlador_clientes.actualizar_cliente(nombre, telefono, id)
    return redirect("/clientes")


# Iniciar el servidor
if __name__ == "__main__":
    #app.run(host='0.0.0.0', port=8000, debug=True)
    app.run(port=5300, debug=True)


"""https://github.com/proyectosfz/crud-flask-mysql-clientes"""